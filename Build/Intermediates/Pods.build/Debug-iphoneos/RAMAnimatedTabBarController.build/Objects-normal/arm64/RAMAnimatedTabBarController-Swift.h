// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.1 clang-703.0.29)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import UIKit;
@import CoreGraphics;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSBundle;
@class UIViewController;
@class NSCoder;


/// UITabBarController with item animations
SWIFT_CLASS("_TtC27RAMAnimatedTabBarController27RAMAnimatedTabBarController")
@interface RAMAnimatedTabBarController : UITabBarController

/// Returns a newly initialized view controller with the nib file in the specified bundle.
///
/// \param nibNameOrNil The name of the nib file to associate with the view controller. The nib file name should
/// not contain any leading path information. If you specify nil, the nibName property is set to nil.
///
/// \param nibBundleOrNil The bundle in which to search for the nib file. This method looks for the nib file in the
/// bundle's language-specific project directories first, followed by the Resources directory. If this parameter is nil,
/// the method uses the heuristics described below to locate the nib file.
///
/// \returns  A newly initialized RAMAnimatedTabBarController object.
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;

/// Returns a newly initialized view controller with the nib file in the specified bundle.
///
/// \param viewControllers Sets the root view controllers of the tab bar controller.
///
/// \returns  A newly initialized RAMAnimatedTabBarController object.
- (nonnull instancetype)initWithViewControllers:(NSArray<UIViewController *> * _Nonnull)viewControllers OBJC_DESIGNATED_INITIALIZER;

/// Returns a newly initialized view controller with the nib file in the specified bundle.
///
/// \param coder An unarchiver object.
///
/// \returns  A newly initialized RAMAnimatedTabBarController object.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
@end

@class UIColor;

@interface RAMAnimatedTabBarController (SWIFT_EXTENSION(RAMAnimatedTabBarController))

/// Change selected color for each UITabBarItem
///
/// \param textSelectedColor set new color for text
///
/// \param iconSelectedColor set new color for icon
- (void)changeSelectedColor:(UIColor * _Nonnull)textSelectedColor iconSelectedColor:(UIColor * _Nonnull)iconSelectedColor;

/// Hide UITabBarController
///
/// \param isHidden A Boolean indicating whether the UITabBarController is displayed
- (void)animationTabBarHidden:(BOOL)isHidden;

/// Selected UITabBarItem with animaton
///
/// \param from Index for unselected animation
///
/// \param to Index for selected animation
- (void)setSelectIndexFrom:(NSInteger)from to:(NSInteger)to;
@end

@class RAMItemAnimation;
@class UIFont;
@class RAMBadge;


/// UITabBarItem with animation
SWIFT_CLASS("_TtC27RAMAnimatedTabBarController21RAMAnimatedTabBarItem")
@interface RAMAnimatedTabBarItem : UITabBarItem
@property (nonatomic) CGFloat yOffSet;
@property (nonatomic, getter=isEnabled) BOOL enabled;

/// animation for UITabBarItem. use RAMFumeAnimation, RAMBounceAnimation, RAMRotationAnimation, RAMFrameItemAnimation, RAMTransitionAnimation or create custom anmation inherit RAMItemAnimation
@property (nonatomic, strong) IBOutlet RAMItemAnimation * _Null_unspecified animation;

/// The font used to render the UITabBarItem text.
@property (nonatomic, strong) UIFont * _Nonnull textFont;

/// The color of the UITabBarItem text.
@property (nonatomic, strong) UIColor * _Nonnull textColor;

/// The tint color of the UITabBarItem icon.
@property (nonatomic, strong) UIColor * _Nonnull iconColor;
@property (nonatomic, strong) RAMBadge * _Nullable badge;

/// Start selected animation
- (void)playAnimation;

/// Start unselected animation
- (void)deselectAnimation;

/// Set selected state without animation
- (void)selectedState;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


@interface RAMAnimatedTabBarItem (SWIFT_EXTENSION(RAMAnimatedTabBarController))

/// The current badge value
@property (nonatomic, copy) NSString * _Nullable badgeValue;
@end

@class UIView;

SWIFT_CLASS("_TtC27RAMAnimatedTabBarController8RAMBadge")
@interface RAMBadge : UILabel
+ (RAMBadge * _Nonnull)badge;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)addBadgeOnView:(UIView * _Nonnull)onView;
@end

@class UIImageView;


/// Base class for UITabBarItems animation
SWIFT_CLASS("_TtC27RAMAnimatedTabBarController16RAMItemAnimation")
@interface RAMItemAnimation : NSObject

/// The duration of the animation
@property (nonatomic) CGFloat duration;

/// The text color in selected state.
@property (nonatomic, strong) UIColor * _Nonnull textSelectedColor;

/// The icon color in selected state.
@property (nonatomic, strong) UIColor * _Null_unspecified iconSelectedColor;

/// Start animation, method call when UITabBarItem is selected
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
- (void)playAnimation:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel;

/// Start animation, method call when UITabBarItem is unselected
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
///
/// \param defaultTextColor default UITabBarItem text color
///
/// \param defaultIconColor default UITabBarItem icon color
- (void)deselectAnimation:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel defaultTextColor:(UIColor * _Nonnull)defaultTextColor defaultIconColor:(UIColor * _Nonnull)defaultIconColor;

/// Method call when TabBarController did load
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
- (void)selectedState:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// The RAMBounceAnimation class provides bounce animation.
SWIFT_CLASS("_TtC27RAMAnimatedTabBarController18RAMBounceAnimation")
@interface RAMBounceAnimation : RAMItemAnimation

/// Start animation, method call when UITabBarItem is selected
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
- (void)playAnimation:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel;

/// Start animation, method call when UITabBarItem is unselected
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
///
/// \param defaultTextColor default UITabBarItem text color
///
/// \param defaultIconColor default UITabBarItem icon color
- (void)deselectAnimation:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel defaultTextColor:(UIColor * _Nonnull)defaultTextColor defaultIconColor:(UIColor * _Nonnull)defaultIconColor;

/// Method call when TabBarController did load
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
- (void)selectedState:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIImage;


/// The RAMFrameItemAnimation class provides keyframe animation.
SWIFT_CLASS("_TtC27RAMAnimatedTabBarController21RAMFrameItemAnimation")
@interface RAMFrameItemAnimation : RAMItemAnimation

/// A Boolean value indicated plaing revers animation when UITabBarItem unselected, if false image change immediately, defalut value true
@property (nonatomic) BOOL isDeselectAnimation;

/// path to array of image names from plist file
@property (nonatomic, copy) NSString * _Null_unspecified imagesPath;
- (void)awakeFromNib;

/// Set images for keyframe animation
///
/// \param images images for keyframe animation
- (void)setAnimationImages:(NSArray<UIImage *> * _Nonnull)images;

/// Start animation, method call when UITabBarItem is selected
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
- (void)playAnimation:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel;

/// Start animation, method call when UITabBarItem is unselected
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
///
/// \param defaultTextColor default UITabBarItem text color
///
/// \param defaultIconColor default UITabBarItem icon color
- (void)deselectAnimation:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel defaultTextColor:(UIColor * _Nonnull)defaultTextColor defaultIconColor:(UIColor * _Nonnull)defaultIconColor;

/// Method call when TabBarController did load
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
- (void)selectedState:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// The RAMFumeAnimation class provides bounce animation.
SWIFT_CLASS("_TtC27RAMAnimatedTabBarController16RAMFumeAnimation")
@interface RAMFumeAnimation : RAMItemAnimation

/// Start animation, method call when UITabBarItem is selected
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
- (void)playAnimation:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel;

/// Start animation, method call when UITabBarItem is unselected
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
///
/// \param defaultTextColor default UITabBarItem text color
///
/// \param defaultIconColor default UITabBarItem icon color
- (void)deselectAnimation:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel defaultTextColor:(UIColor * _Nonnull)defaultTextColor defaultIconColor:(UIColor * _Nonnull)defaultIconColor;

/// Method call when TabBarController did load
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
- (void)selectedState:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




/// The RAMRotationAnimation class provides rotation animation.
SWIFT_CLASS("_TtC27RAMAnimatedTabBarController20RAMRotationAnimation")
@interface RAMRotationAnimation : RAMItemAnimation

/// Start animation, method call when UITabBarItem is selected
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
- (void)playAnimation:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel;

/// Start animation, method call when UITabBarItem is unselected
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
///
/// \param defaultTextColor default UITabBarItem text color
///
/// \param defaultIconColor default UITabBarItem icon color
- (void)deselectAnimation:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel defaultTextColor:(UIColor * _Nonnull)defaultTextColor defaultIconColor:(UIColor * _Nonnull)defaultIconColor;

/// Method call when TabBarController did load
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
- (void)selectedState:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Transition animtion
SWIFT_CLASS("_TtC27RAMAnimatedTabBarController27RAMTransitionItemAnimations")
@interface RAMTransitionItemAnimations : RAMItemAnimation

/// Start animation, method call when UITabBarItem is selected
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
- (void)playAnimation:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel;

/// Start animation, method call when UITabBarItem is unselected
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
///
/// \param defaultTextColor default UITabBarItem text color
///
/// \param defaultIconColor default UITabBarItem icon color
- (void)deselectAnimation:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel defaultTextColor:(UIColor * _Nonnull)defaultTextColor defaultIconColor:(UIColor * _Nonnull)defaultIconColor;

/// Method call when TabBarController did load
///
/// \param icon animating UITabBarItem icon
///
/// \param textLabel animating UITabBarItem textLabel
- (void)selectedState:(UIImageView * _Nonnull)icon textLabel:(UILabel * _Nonnull)textLabel;
@end

#pragma clang diagnostic pop
